% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{ly_search}
\alias{ly_search}
\title{Search}
\usage{
ly_search(token, q = NULL, section = NULL, tag = NULL,
  author = NULL, boost = NULL, sort = NULL, exclude = NULL,
  pub.start = NULL, pub.end = NULL, n = 100, verbose = FALSE)
}
\arguments{
\item{token}{your token as returned by \code{\link{ly_token}}.}

\item{q}{search query keywords; quoting is supported,
e.g. \code{q="squirrel facts"} instead of \code{q=squirrel+facts}.}

\item{section}{return recommendations that belong only in the specified section.}

\item{tag}{return recommendations that only belong to the specified tag.}

\item{author}{return recommendations that only belong to the specified author.}

\item{boost}{sub-sort value to re-rank relevant posts that receieved high
e.g. \code{views}. See
\href{available metrics}{https://www.parse.ly/help/api/available-metrics/}
for valid metrics. Available for \code{sort="score"} only.}

\item{sort}{Wwat to sort the results by. There are currently 2 valid options:
\code{score}, which will sort articles by overall relevance and \code{pub_date}
 which will sort results by their publication date. The default is \code{score}}

\item{exclude}{exclude recommendations from a certain author, section or tag.
The syntax is \code{exclude="<meta>:<meta-value>"}, where \code{meta} is one of
authors, section, or tags.}

\item{pub.start}{publication filter start date, \code{posts} only.}

\item{pub.end}{publication filter end date, \code{posts} only.}

\item{n}{number of results to return}

\item{verbose}{prints feedback in the console}
}
\description{
Search for Posts by keyword or query. These can match against full content.
}
\examples{
\dontrun{
token <- ly_token("my.domain.com", "XXxxX00X0X000XxXxXx000X0X0X00X")

results <- ly_search(token, q = "ggplot2-topic")
}

}
